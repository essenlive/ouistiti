[{"id":"e761ac79c785e7a9","type":"tab","label":"Flow 1","disabled":false,"info":"","env":[]},{"id":"253f319105659b7b","type":"junction","z":"e761ac79c785e7a9","x":820,"y":520,"wires":[["b487a39e69720055","28857b726e2c73ed","172c28f4f3d521dc"]]},{"id":"89ecb0bed69afef0","type":"telegram bot","botname":"ouistiti","usernames":"","chatids":"569095091","baseapiurl":"","updatemode":"polling","pollinterval":"300","usesocks":false,"sockshost":"","socksprotocol":"socks5","socksport":"6667","socksusername":"anonymous","sockspassword":"","bothost":"","botpath":"","localbotport":"8443","publicbotport":"8443","privatekey":"","certificate":"","useselfsignedcertificate":false,"sslterminated":false,"verboselogging":false},{"id":"45ae1af9b3b54cae","type":"inject","z":"e761ac79c785e7a9","name":"Take Picture","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":210,"y":520,"wires":[["08a98d8c54cc82e1"]]},{"id":"08a98d8c54cc82e1","type":"function","z":"e761ac79c785e7a9","name":"Take picture","func":"const fs = global.get('fs')\nconst camera = global.get(\"camera\")\nconst imagePath = global.get(\"imagePath\")\n\ncamera.takePicture({ targetPath: './foo.XXXXXX'},\nfunction (error, tmpname) {\n    if (error) {\n        node.warn(\"error taking picture\")\n        node.warn(error)\n        node.send(null);\n        node.done();\n    }\n    msg.imagePath = imagePath;\n    fs.renameSync(tmpname, msg.imagePath);\n    node.status({ fill: \"green\", shape: \"dot\", text: msg.imagePath });\n    node.send(msg);\n    node.done();\n\n});\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":490,"y":520,"wires":[["253f319105659b7b"]],"icon":"font-awesome/fa-camera"},{"id":"4a2f70a74b5dacaa","type":"telegram receiver","z":"e761ac79c785e7a9","name":"ouistiti","bot":"89ecb0bed69afef0","saveDataDir":"./images","filterCommands":false,"x":188.33330535888672,"y":568.3332691192627,"wires":[["2b700851b5584b6b"],[]]},{"id":"5afc35a5f31661c1","type":"function","z":"e761ac79c785e7a9","d":true,"name":"Print image","func":"const device = global.get('device')\nconst printer = global.get('printer')\nconst escpos = global.get('escpos')\n\n\nescpos.Image.load(msg.printPath, (image) => {\n    if (typeof image.data !== 'undefined') {\n        \n        device.open(function (error) {\n            if (error) {\n                node.warn(\"error\")\n                node.send(null)\n                node.done();\n            }\n            printer\n                .align('ct')\n                .raster(image)\n                .feed(2)\n                .cut()\n                .close();\n        })\n        node.done();\n    }\n    else { \n        node.warn(\"error loading image\")\n        node.send(null)\n        node.done();\n        };\n})\n\n/* Try this for image\nprinter.align('ct')\n       .image(image, 's8')\n       .then(() => { \n          printer.cut()\n                 .close(); \n       });\n\n       */","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1150,"y":520,"wires":[[]],"icon":"font-awesome/fa-print"},{"id":"2b700851b5584b6b","type":"function","z":"e761ac79c785e7a9","name":"Simplify","func":"msg = msg.payload;\nmsg.imagePath = msg.path;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":480,"y":560,"wires":[["2818b64726e78a69"]]},{"id":"2818b64726e78a69","type":"switch","z":"e761ac79c785e7a9","name":"","property":"type","propertyType":"msg","rules":[{"t":"eq","v":"photo","vt":"str"},{"t":"eq","v":"message","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":690,"y":560,"wires":[["253f319105659b7b"],["0e6c6cb285609ced"]]},{"id":"0e6c6cb285609ced","type":"function","z":"e761ac79c785e7a9","name":"Print text","func":"const printer = global.get(\"printer\");\nconst device = global.get(\"device\");\n\nnode.status(\"Printing\");\n\ndevice.open(function (error) {\n    if (error) {\n        node.warn(\"error\")\n        node.warn(error)\n        return null\n    }\n    printer\n        .font('a')\n        .feed(2)\n        .align('ct')\n        .style('bu')\n        .size(1, 1)\n        .text(msg.content)\n        .feed(12)\n        .cut()\n        .close();\n        \n    node.status(\"\");\n\n})\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1140,"y":560,"wires":[[]],"icon":"font-awesome/fa-print"},{"id":"afec08709e268b09","type":"image viewer","z":"e761ac79c785e7a9","name":"","width":160,"data":"printPath","dataType":"msg","active":true,"x":1150,"y":240,"wires":[[]]},{"id":"b487a39e69720055","type":"image viewer","z":"e761ac79c785e7a9","name":"","width":160,"data":"imagePath","dataType":"msg","active":true,"x":910,"y":240,"wires":[[]]},{"id":"744f864313fc8ffb","type":"inject","z":"e761ac79c785e7a9","name":"Initialize","props":[],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","x":280,"y":680,"wires":[["71c2f02b2842e3e1"]]},{"id":"c7e341a0.381cc","type":"http in","z":"e761ac79c785e7a9","name":"","url":"/print","method":"get","upload":false,"swaggerDoc":"","x":260,"y":740,"wires":[["ff4e21358f37df78"]]},{"id":"2fb1c354.d04e3c","type":"file in","z":"e761ac79c785e7a9","name":"","filename":"printPath","filenameType":"msg","format":"","allProps":false,"x":690,"y":740,"wires":[["c9e28681.361d78"]]},{"id":"c9e28681.361d78","type":"change","z":"e761ac79c785e7a9","name":"Set Headers","rules":[{"t":"set","p":"headers","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"headers.content-type","pt":"msg","to":"image/png","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":870,"y":740,"wires":[["88974243.7768c"]]},{"id":"88974243.7768c","type":"http response","z":"e761ac79c785e7a9","name":"","statusCode":"","headers":{},"x":1010,"y":740,"wires":[]},{"id":"2a0558f0c58c9068","type":"inject","z":"e761ac79c785e7a9","name":"Inject Lena","props":[{"p":"imagePath","v":"./images/lena.png","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":200,"y":480,"wires":[["253f319105659b7b"]]},{"id":"ff4e21358f37df78","type":"change","z":"e761ac79c785e7a9","name":"","rules":[{"t":"set","p":"printPath","pt":"msg","to":"printPath","tot":"global"}],"action":"","property":"","from":"","to":"","reg":false,"x":490,"y":740,"wires":[["2fb1c354.d04e3c"]]},{"id":"28857b726e2c73ed","type":"function","z":"e761ac79c785e7a9","name":"dither Image","func":"const sharp = global.get('sharp')\nmsg.printPath = global.get('printPath')\nif (!msg.imagePath) msg.imagePath = \"./images/lena.png\" \nglobal.set(\"imagePath\", msg.imagePath)\n\n// dithering function, working off a sharp.js meta object + buffer data\nconst dither = ({ height, width, buffer }) => {\n\n    // performs pattern lookup\n    const bayer = (x, y, c0) => {\n        const clamp = val => (val < 0 ? 0 : val > 255 ? 255 : val)\n        // via http://devlog-martinsh.blogspot.com/2011/03/glsl-8x8-bayer-matrix-dithering.html\n        const pattern = [\n            [0, 32, 8, 40, 2, 34, 10, 42],   /* 8x8 Bayer ordered dithering  */\n            [48, 16, 56, 24, 50, 18, 58, 26],   /* pattern.  Each input pixel   */\n            [12, 44, 4, 36, 14, 46, 6, 38],   /* is scaled to the 0..63 range */\n            [60, 28, 52, 20, 62, 30, 54, 22],   /* before looking in this table */\n            [3, 35, 11, 43, 1, 33, 9, 41],   /* to determine the action.     */\n            [51, 19, 59, 27, 49, 17, 57, 25],\n            [15, 47, 7, 39, 13, 45, 5, 37],\n            [63, 31, 55, 23, 61, 29, 53, 21]\n        ]\n\n        // dithers to 100% black or white\n        if (clamp(c0 + pattern[x % 8][y % 8]) > 127) {\n            return 255\n        } else return 0\n    }\n\n    // given Sharp data object with width, height and raw-formatted uint8 buffer\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let index = x + y * width // get position in 1d buffer array\n            buffer[index] = bayer(x, y, buffer[index])\n        }\n    }\n\n    return buffer;\n}\n\nlet meta = {}\nsharp(msg.imagePath)\n    .normalise()\n    .toColourspace('b-w')\n    .resize(512, 512)\n    .metadata((error, metadata) => {\n        if (error) {\n            node.warn(error)\n            node.send(null);\n            node.done()\n            }\n        else meta = {...metadata,\n            height : 512,\n            width:512\n        }\n    })\n    .raw()\n    .toBuffer()\n    .then(\n        (buffer)=>{\n            sharp(dither({ ...meta, buffer }), {\n            raw: {\n                width: 512,\n                height: 512,\n                channels: 1,\n            }\n        })\n            .jpeg()\n                .toFile(msg.printPath, err => {\n                if(err){\n                    node.warn(err);\n                    node.send(null);\n                    node.done();\n                }\n                node.send(msg);\n                node.done();\n        })\n    })","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":950,"y":520,"wires":[["afec08709e268b09","71a4e894ffee85ac","5afc35a5f31661c1","7c8090ca.00c02"]]},{"id":"71a4e894ffee85ac","type":"debug","z":"e761ac79c785e7a9","name":"prepared","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1160,"y":200,"wires":[]},{"id":"172c28f4f3d521dc","type":"debug","z":"e761ac79c785e7a9","name":"initial","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":910,"y":200,"wires":[]},{"id":"d59d37638e2eaab9","type":"inject","z":"e761ac79c785e7a9","name":"Reinject latest","props":[{"p":"imagePath","v":"imagePath","vt":"global"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":210,"y":440,"wires":[["253f319105659b7b"]]},{"id":"71c2f02b2842e3e1","type":"function","z":"e761ac79c785e7a9","name":"Setup printer","func":"const escpos = global.get('escpos')\nconst escposUSB = global.get('escposUSB')\n\nglobal.set(\"printPath\", './images/print.jpg')\nglobal.set(\"imagePath\", './images/picture.jpg')\n\nif (!global.get(\"printer\")){\n    try {\n        node.warn(\"Instantiating Printer\");\n        escpos.USB = escposUSB;\n        let device = new escpos.USB();\n        global.set(\"device\", device)\n        \n        let printer = new escpos.Printer(device);\n        global.set(\"printer\", printer)\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Printer initialized\" });\n        \n        node.send(msg);\n        node.done();\n\n    } catch (error) {\n        node.warn(error)\n        node.status({ fill: \"red\", shape: \"dot\", text: error });\n        node.send(null);\n        node.done();\n        };\n}\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":680,"wires":[["1b31aa7d76811b33"]],"icon":"font-awesome/fa-print"},{"id":"1b31aa7d76811b33","type":"function","z":"e761ac79c785e7a9","d":true,"name":"Connect to camera","func":"const gphoto2 = global.get('gphoto2')\n\nif (!global.get(\"camera\")){\n    try {\n        var GPhoto = new gphoto2.GPhoto2();\n        GPhoto.list(function (list) {\n            node.warn(\"Instantiating camera\")\n            if (list.length === 0) return;\n            node.warn(list)\n            let camera = list[0];\n            global.set(\"camera\", camera);\n            node.status({ fill: \"green\", shape: \"dot\", text: `initialized ${camera.model}` });\n            node.send(msg);\n        })\n        \n        } catch (error) {\n            node.warn(error)\n            node.status({ fill: \"error\", shape: \"dot\", text: error });\n\n            node.send(null);\n        };\n}\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":680,"wires":[[]],"icon":"font-awesome/fa-camera"},{"id":"0e2f8fafdef4dd9e","type":"usb-camera","z":"e761ac79c785e7a9","mode":"file","format":"jpg","filename":"./images/picture.jpg","width":"400","height":"400","quality":"100","brightness":"50","contrast":"50","saturation":"50","hue":"50","delay":"0","name":"","x":490,"y":400,"wires":[["253f319105659b7b"]]},{"id":"a8466b409199842f","type":"inject","z":"e761ac79c785e7a9","name":"Take webcam image","props":[{"p":"imagePath","v":"./images/picture.jpg","vt":"str"},{"p":"file","v":"./images/picture.jpg","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":230,"y":400,"wires":[["0e2f8fafdef4dd9e"]]},{"id":"99ee972c.22d088","type":"telegram sender","z":"e761ac79c785e7a9","name":"","bot":"89ecb0bed69afef0","haserroroutput":false,"outputs":1,"x":1490,"y":480,"wires":[[]]},{"id":"2058d729.1a3a48","type":"function","z":"e761ac79c785e7a9","name":"send picture","func":"var pl = {\n  content: msg.payload,\n  type : 'photo',\n//  chatId: \"569095091\",\n  chatId: '-449572690'\n}\n\nmsg.payload = pl;\n\n\n/* type can be one of the following\nphoto\naudio\nvideo\nsticker\nvoice\ndocument\n*/\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1310,"y":480,"wires":[["99ee972c.22d088"]]},{"id":"7c8090ca.00c02","type":"file in","z":"e761ac79c785e7a9","name":"load image","filename":"printPath","filenameType":"msg","format":"","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":1150,"y":480,"wires":[["2058d729.1a3a48"]]}]