[{"id":"e761ac79c785e7a9","type":"tab","label":"Flow 1","disabled":false,"info":"","env":[]},{"id":"253f319105659b7b","type":"junction","z":"e761ac79c785e7a9","x":1300,"y":520,"wires":[["172c28f4f3d521dc","1692f0f497bda03f","b487a39e69720055"]]},{"id":"82a61d1a880bb18c","type":"junction","z":"e761ac79c785e7a9","x":1680,"y":520,"wires":[["5afc35a5f31661c1","afec08709e268b09","71a4e894ffee85ac"]]},{"id":"3e909098c5dfe4dc","type":"junction","z":"e761ac79c785e7a9","x":1160,"y":560,"wires":[["54a45be632231705","da2283fc25bce35e"]]},{"id":"89ecb0bed69afef0","type":"telegram bot","botname":"ouistiti","usernames":"","chatids":"569095091, -449572690, -1001302926258, -621716050","baseapiurl":"","updatemode":"polling","pollinterval":"300","usesocks":false,"sockshost":"","socksprotocol":"socks5","socksport":"6667","socksusername":"anonymous","sockspassword":"","bothost":"","botpath":"","localbotport":"8443","publicbotport":"8443","privatekey":"","certificate":"","useselfsignedcertificate":false,"sslterminated":false,"verboselogging":false},{"id":"45ae1af9b3b54cae","type":"inject","z":"e761ac79c785e7a9","name":"Take Picture","props":[{"p":"order","v":"takePhoto","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":210,"y":600,"wires":[["2b700851b5584b6b"]]},{"id":"08a98d8c54cc82e1","type":"function","z":"e761ac79c785e7a9","name":"Take picture","func":"const fs = global.get('fs')\nconst camera = global.get(\"camera\")\nconst imagePath = global.get(\"imagePath\")\n\ncamera.takePicture({ targetPath: './foo.XXXXXX'},\nfunction (error, tmpname) {\n    if (error) {\n        node.warn(\"error taking picture\")\n        node.warn(error)\n        node.send(null);\n        node.done();\n    }\n    msg.payload = imagePath;\n    fs.renameSync(tmpname, msg.imagePath);\n    node.status({ fill: \"green\", shape: \"dot\", text: msg.imagePath });\n    node.send(msg);\n    node.done();\n\n});\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":850,"y":640,"wires":[["bcd102a12ebee1fe","3e909098c5dfe4dc"]],"icon":"font-awesome/fa-camera"},{"id":"4a2f70a74b5dacaa","type":"telegram receiver","z":"e761ac79c785e7a9","name":"ouistiti","bot":"89ecb0bed69afef0","saveDataDir":"./images","filterCommands":false,"x":190,"y":440,"wires":[["2b700851b5584b6b"],[]]},{"id":"5afc35a5f31661c1","type":"function","z":"e761ac79c785e7a9","name":"Print image","func":"const device = global.get('device')\nconst printer = global.get('printer')\nconst escpos = global.get('escpos')\n\n\nescpos.Image.load(msg.printPath, (image) => {\n    if (typeof image.data !== 'undefined') {\n        \n        device.open(function (error) {\n            if (error) {\n                node.warn(\"error\")\n                node.send(null)\n                node.done();\n            }\n            printer\n                .align('ct')\n                .feed(1)\n                .raster(image)\n                .feed(4)\n                .cut()\n                .close();\n        })\n        node.done();\n    }\n    else { \n        node.warn(\"error loading image\")\n        node.send(null)\n        node.done();\n        };\n})\n/* Try this for image\n\nprinter.align('ct')\n    .image(msg.printPath, 's8')\n       .then(() => { \n          printer.cut()\n                 .close(); \n       });\n       */\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1790,"y":520,"wires":[[]],"icon":"font-awesome/fa-print"},{"id":"2b700851b5584b6b","type":"function","z":"e761ac79c785e7a9","name":"Simplify","func":"let printImage = null,\n    printText = null,\n    takeWebcam = null,\n    takePhoto = null,\n    cut = null;\n\nswitch (msg.order) {\n    case \"printImage\":\n\n        return [msg, null, null, null, null];\n    case \"printText\":\n\n        return [null, msg, null, null, null];\n    case \"takeWebcam\":\n\n        return [null, null, msg, null, null];\n    case \"takePhoto\":\n\n        return [null, null, null, msg, null];\n    case \"cut\":\n\n        return [null, null, null, null, msg];\n    default:\n    return [null, null, null, null, null];\n            \n}\n\n//msg = msg.payload;\n//msg.payload = msg.path;","outputs":5,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":560,"wires":[["253f319105659b7b"],["a14dce19bec287c9"],["0e2f8fafdef4dd9e"],["08a98d8c54cc82e1"],["abb1aa5669ce1b2c"]]},{"id":"afec08709e268b09","type":"image viewer","z":"e761ac79c785e7a9","name":"","width":160,"data":"printPath","dataType":"msg","active":true,"x":1790,"y":600,"wires":[[]]},{"id":"744f864313fc8ffb","type":"inject","z":"e761ac79c785e7a9","name":"Initialize","props":[],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","x":180,"y":1020,"wires":[["71c2f02b2842e3e1","1b31aa7d76811b33"]]},{"id":"2a0558f0c58c9068","type":"inject","z":"e761ac79c785e7a9","name":"Inject Lena","props":[{"p":"imagePath","v":"./images/lena.png","vt":"str"},{"p":"order","v":"printImage","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":200,"y":680,"wires":[["2b700851b5584b6b"]]},{"id":"71a4e894ffee85ac","type":"debug","z":"e761ac79c785e7a9","name":"prepared","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1780,"y":560,"wires":[]},{"id":"172c28f4f3d521dc","type":"debug","z":"e761ac79c785e7a9","name":"initial","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1430,"y":560,"wires":[]},{"id":"d59d37638e2eaab9","type":"inject","z":"e761ac79c785e7a9","name":"Reinject latest","props":[{"p":"imagePath","v":"imagePath","vt":"global"},{"p":"order","v":"printImage","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":210,"y":640,"wires":[["2b700851b5584b6b"]]},{"id":"71c2f02b2842e3e1","type":"function","z":"e761ac79c785e7a9","name":"Setup printer","func":"const escpos = global.get('escpos')\nconst escposUSB = global.get('escposUSB')\n\nglobal.set(\"printPath\", './images/print.jpg')\nglobal.set(\"imagePath\", './images/picture.jpg')\n\nif (!global.get(\"printer\")){\n    try {\n        node.warn(\"Instantiating Printer\");\n        escpos.USB = escposUSB;\n        let device = new escpos.USB();\n        global.set(\"device\", device)\n        \n        let printer = new escpos.Printer(device);\n        global.set(\"printer\", printer)\n        node.status({ fill: \"green\", shape: \"dot\", text: \"Printer initialized\" });\n        \n        node.send(msg);\n        node.done();\n\n    } catch (error) {\n        node.warn(error)\n        node.status({ fill: \"red\", shape: \"dot\", text: error });\n        node.send(null);\n        node.done();\n        };\n}\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":1000,"wires":[[]],"icon":"font-awesome/fa-print"},{"id":"1b31aa7d76811b33","type":"function","z":"e761ac79c785e7a9","name":"Connect to camera","func":"const gphoto2 = global.get('gphoto2')\n\n//if (!global.get(\"camera\")){\n    try {\n        var GPhoto = new gphoto2.GPhoto2();\n        GPhoto.list(function (list) {\n            node.warn(\"Instantiating camera\")\n            if (list.length === 0) return;\n            node.warn(list)\n            let camera = list[0];\n            global.set(\"camera\", camera);\n            node.status({ fill: \"green\", shape: \"dot\", text: `initialized ${camera.model}` });\n            node.send(msg);\n        })\n        \n        } catch (error) {\n            node.warn(error)\n            node.status({ fill: \"error\", shape: \"dot\", text: error });\n\n            node.send(null);\n        };\n//}\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":960,"wires":[[]],"icon":"font-awesome/fa-camera"},{"id":"0e2f8fafdef4dd9e","type":"usb-camera","z":"e761ac79c785e7a9","mode":"buffer","format":"jpg","filename":"{{{imagePath}}}","width":"520","height":"520","quality":"100","brightness":"75","contrast":"75","saturation":"75","hue":"50","delay":"0","name":"","x":850,"y":600,"wires":[["8776cbbf6ba03c82","3e909098c5dfe4dc"]]},{"id":"a8466b409199842f","type":"inject","z":"e761ac79c785e7a9","name":"Take webcam image","props":[{"p":"imagePath","v":"imagePath","vt":"global"},{"p":"order","v":"takeWebcam","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":230,"y":560,"wires":[["2b700851b5584b6b"]]},{"id":"058670a3d3b7593d","type":"http in","z":"e761ac79c785e7a9","name":"","url":"/insta","method":"post","upload":false,"swaggerDoc":"","x":210,"y":260,"wires":[["56695c4538c5e72e","8dae72a5ee1ed01d"]]},{"id":"56695c4538c5e72e","type":"http response","z":"e761ac79c785e7a9","name":"","statusCode":"","headers":{},"x":210,"y":220,"wires":[]},{"id":"65162f180d88f3df","type":"http request","z":"e761ac79c785e7a9","name":"","method":"GET","ret":"bin","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":570,"y":260,"wires":[["253f319105659b7b"]]},{"id":"8dae72a5ee1ed01d","type":"function","z":"e761ac79c785e7a9","name":"Simplify","func":"let newMsg = msg.payload;\nnewMsg.imagePath = \"./images/insta.jpg\";\nnewMsg.printPath = \"./images/print.jpg\";\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":260,"wires":[["65162f180d88f3df"]]},{"id":"6677c29a940bee6a","type":"restart","z":"e761ac79c785e7a9","name":"restart container","x":360,"y":1080,"wires":[[]]},{"id":"bfb2bebf07f2e53f","type":"inject","z":"e761ac79c785e7a9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":180,"y":1080,"wires":[["6677c29a940bee6a"]]},{"id":"1692f0f497bda03f","type":"function","z":"e761ac79c785e7a9","name":"dither Image","func":"const sharp = global.get('sharp')\nmsg.printPath = global.get('printPath')\nif (!msg.payload) msg.payload = \"./images/lena.png\"\nconst file = msg.payload\n\n// dithering function, working off a sharp.js meta object + buffer data\nconst dither = ({ height, width, buffer }) => {\n    // performs pattern lookup\n    const bayer = (x, y, c0) => {\n        const clamp = val => (val < 0 ? 0 : val > 255 ? 255 : val)\n        // via http://devlog-martinsh.blogspot.com/2011/03/glsl-8x8-bayer-matrix-dithering.html\n        const pattern = [\n            [0, 32, 8, 40, 2, 34, 10, 42],   /* 8x8 Bayer ordered dithering  */\n            [48, 16, 56, 24, 50, 18, 58, 26],   /* pattern.  Each input pixel   */\n            [12, 44, 4, 36, 14, 46, 6, 38],   /* is scaled to the 0..63 range */\n            [60, 28, 52, 20, 62, 30, 54, 22],   /* before looking in this table */\n            [3, 35, 11, 43, 1, 33, 9, 41],   /* to determine the action.     */\n            [51, 19, 59, 27, 49, 17, 57, 25],\n            [15, 47, 7, 39, 13, 45, 5, 37],\n            [63, 31, 55, 23, 61, 29, 53, 21]\n        ]\n\n        // dithers to 100% black or white\n        if (clamp(c0 + pattern[x % 8][y % 8]) > 127) {\n            return 255\n        } else return 0\n    }\n\n    // given Sharp data object with width, height and raw-formatted uint8 buffer\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let index = x + y * width // get position in 1d buffer array\n            buffer[index] = bayer(x, y, buffer[index])\n        }\n    }\n\n    return buffer;\n}\n\nlet { data, info } = await sharp(file)\n    .resize(512)\n    .toColourspace('b-w')\n    .rotate(180)\n    .raw()\n    .toBuffer({ resolveWithObject: true })\nlet dithered = await sharp(dither({ ...info, buffer : data }), {\n    raw: {\n        width: info.width,\n        height: info.height,\n        channels: 1,\n    }}).jpeg().withMetadata().toFile(msg.printPath)\n\nmsg.image = dithered\nnode.send(msg);\nnode.done()\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1450,"y":520,"wires":[["b79725159093b747"]]},{"id":"1411b70ff8bfbe32","type":"function","z":"e761ac79c785e7a9","name":"Cut","func":"const printer = global.get(\"printer\");\nconst device = global.get(\"device\");\n\nnode.status(\"Printing\");\n\ndevice.open(function (error) {\n    if (error) {\n        node.warn(\"error\")\n        node.warn(error)\n        return null\n    }\n    printer\n        .cut()\n        .close();\n        \n    node.status(\"\");\n\n})\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":680,"wires":[["2df7a59571cd1cf5"]],"icon":"font-awesome/fa-print"},{"id":"b487a39e69720055","type":"image viewer","z":"e761ac79c785e7a9","name":"","width":160,"data":"payload","dataType":"msg","active":true,"x":1430,"y":600,"wires":[[]]},{"id":"28268f277c204c3c","type":"inject","z":"e761ac79c785e7a9","name":"Cut paper","props":[{"p":"order","v":"cut","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":200,"y":760,"wires":[["2b700851b5584b6b"]]},{"id":"a3127a0ece08c641","type":"inject","z":"e761ac79c785e7a9","name":"Text","props":[{"p":"content","v":"Ciao les losers !","vt":"str"},{"p":"invert","v":"false","vt":"bool"},{"p":"order","v":"printText","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":190,"y":720,"wires":[["2b700851b5584b6b"]]},{"id":"a14dce19bec287c9","type":"function","z":"e761ac79c785e7a9","name":"Wrap text","func":"const text = msg.content;\nconst char = \" \";\nconst wrapSize = 20;\n\nfunction getCharIndexes(string, char) {\n    const indexes = [];\n\n    for (let index = 0; index < string.length; index++) {\n        if (string[index] === char) {\n            indexes.push(index);\n        }\n    }\n    return indexes\n}\n\nfunction getSubstrings(string, indexes, wrapSize) {\n    indexes = [...indexes, string.length]\n    const subStrings = []\n    let currentSplit = 0\n    let substring;\n    indexes.forEach((el, i) => {\n\n        if ((el - currentSplit) >= wrapSize) {\n            if ((el - indexes[i - 1]) > wrapSize + 1) {\n                substring = string.slice(currentSplit + 1, currentSplit + wrapSize);\n                subStrings.push(substring + \"-\")\n                console.log([currentSplit, el], substring);\n                currentSplit = currentSplit + wrapSize;\n            }\n            else {\n                substring = string.slice(currentSplit === 0 ? 0 : currentSplit + 1, indexes[i - 1]);\n                subStrings.push(substring)\n                console.log([currentSplit, el], substring);\n                currentSplit = indexes[i - 1];\n            }\n        }\n        if (i === indexes.length - 1) {\n            substring = string.slice(currentSplit === 0 ? 0 : currentSplit + 1, string.length);\n            subStrings.push(substring)\n        }\n    });\n    return subStrings;\n}\n\n\nlet indexes = getCharIndexes(text, ' ')\nmsg.text = getSubstrings(text, indexes, wrapSize)\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":560,"wires":[["5b2f8850cf9bc535"]]},{"id":"5b2f8850cf9bc535","type":"function","z":"e761ac79c785e7a9","name":"Text2image","func":"const sharp = global.get('sharp')\n\nconst width = 512;\nconst lineHeight = 40;\nconst margin = 15;\nconst separator = 5;\nlet text = ``;\n\nmsg.text.forEach((el, i) => { text = text + `<text x=\"50%\" y=\"${(i) * (lineHeight + 2 * separator) + (lineHeight + separator + margin)}\" text-anchor=\"middle\" class=\"title\">${el}</text>`});\nconst svgImage = `\n<svg width=\"${width}\" height=\"${(lineHeight + 2 * separator) * msg.text.length + 2 * margin}\">\n    <style>\n    .title { \n    fill: ${!msg.invert ? \"#fff\" : \"#000\"};\n    font-size: ${lineHeight}px;\n    font-weight: thin;\n    font-family : sans-serif;\n    }\n    </style>\n    <rect x=\"0\" y=\"0\" width=\"${width}\" height=\"${(lineHeight + 2 * separator) * msg.text.length + 2 * margin}\" style=\"fill: ${!msg.invert ? \"#000\" : \"#fff\"};\" />\n    ${text}\n</svg>\n`;\nconst svgBuffer = Buffer.from(svgImage);\nmsg.payload = await sharp(svgBuffer)\n    .jpeg()\n    .toBuffer()\n\nnode.send(msg);\nnode.done()\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":560,"wires":[["bc8ce598864060b7","3e909098c5dfe4dc"]]},{"id":"83858233b157e94f","type":"rpi-gpio in","z":"e761ac79c785e7a9","name":"Button Press","pin":"2","intype":"up","debounce":"25","read":true,"bcm":true,"x":210,"y":340,"wires":[["8854754336006cdd"]]},{"id":"437bb9c7d4023acf","type":"change","z":"e761ac79c785e7a9","name":"Create Order","rules":[{"t":"set","p":"order","pt":"msg","to":"takePhoto","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":530,"y":340,"wires":[["2b700851b5584b6b","c8fc67323048912d"]]},{"id":"8854754336006cdd","type":"switch","z":"e761ac79c785e7a9","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":370,"y":340,"wires":[["437bb9c7d4023acf"]]},{"id":"92610fe41ae87fe4","type":"link in","z":"e761ac79c785e7a9","name":"loop","links":["ee26d4badb6c6008","2df7a59571cd1cf5","bcd102a12ebee1fe","8776cbbf6ba03c82","bc8ce598864060b7","89cf16f5190a1d56"],"x":225,"y":400,"wires":[["2b700851b5584b6b"]]},{"id":"b79725159093b747","type":"delay","z":"e761ac79c785e7a9","name":"Limit","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1610,"y":520,"wires":[["82a61d1a880bb18c"]]},{"id":"c8fc67323048912d","type":"debug","z":"e761ac79c785e7a9","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":740,"y":340,"wires":[]},{"id":"2df7a59571cd1cf5","type":"link out","z":"e761ac79c785e7a9","name":"link out 1","mode":"link","links":["92610fe41ae87fe4"],"x":1105,"y":680,"wires":[]},{"id":"abb1aa5669ce1b2c","type":"delay","z":"e761ac79c785e7a9","name":"Limit","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":830,"y":680,"wires":[["1411b70ff8bfbe32"]]},{"id":"bcd102a12ebee1fe","type":"link out","z":"e761ac79c785e7a9","name":"link out 2","mode":"link","links":["92610fe41ae87fe4"],"x":1105,"y":640,"wires":[]},{"id":"8776cbbf6ba03c82","type":"link out","z":"e761ac79c785e7a9","name":"link out 3","mode":"link","links":["92610fe41ae87fe4"],"x":1105,"y":600,"wires":[]},{"id":"bc8ce598864060b7","type":"link out","z":"e761ac79c785e7a9","name":"link out 4","mode":"link","links":["92610fe41ae87fe4"],"x":1105,"y":560,"wires":[]},{"id":"54a45be632231705","type":"debug","z":"e761ac79c785e7a9","name":"initial","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1230,"y":560,"wires":[]},{"id":"da2283fc25bce35e","type":"image viewer","z":"e761ac79c785e7a9","name":"","width":160,"data":"payload","dataType":"msg","active":true,"x":1230,"y":600,"wires":[[]]}]